from telegram import ReplyKeyboardMarkup
from services.dialog import dialog
from utils.util import load_message, send_photo, send_text, show_main_menu, send_text_buttons
from utils.logger import logger, log_user_action
from handlers.facts import random_fact
from handlers.gpt_chat import gpt
from handlers.talk import talk_command
from handlers.quiz import handle_quiz_command
from handlers.food_analysis import photo_mode_start
from handlers.recipe import recept

async def start(update, context):
    user_id = update.effective_user.id
    dialog.set_mode(user_id, 'main')  # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Ä–µ–∂–∏–º main –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ

    # keyboard = [["üé≤ –¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç", "üí¨ GPT-—á–∞—Ç"],
    #             ["üß† –û—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—å", "üéì –í—ñ–∫—Ç–æ—Ä–∏–Ω–∞"],
    #             ["üç≥ –†–µ—Ü–µ–ø—Ç", "üì∑ –§–æ—Ç–æ"]]
    # reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    msg = load_message('main')
    await send_photo(update, context, 'avatar_main')
    # await send_text(update, context, msg)
    await show_main_menu(update, context, {
    'start': 'üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –±–æ—Ç–∞',
    'random': 'üé≤ –¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç',
    'gpt': 'üí¨ –°–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ ChatGPT',
    'talk': 'üß† –î—ñ–∞–ª–æ–≥ –∑ —ñ—Å—Ç–æ—Ä–∏—á–Ω–æ—é –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—é',
    'quiz': 'üéì –Ü–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞ –≥—Ä–∞ "–ù–∞–π—Ä–æ–∑—É–º–Ω—ñ—à–∏–π"',
    'photo': 'üì∑ –†–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è —ó–∂—ñ —Ç–∞ –ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∫–∞–ª–æ—Ä—ñ–π',
    'recept': 'üç≥ –ö—É–ª—ñ–Ω–∞—Ä–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫ (—Ä–µ—Ü–µ–ø—Ç–∏ –∑—ñ —Å–≤–æ—ó—Ö —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤)',
    })
    await send_text_buttons(update, context, msg, {
        'main_start': 'üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –±–æ—Ç–∞',
        'main_random': 'üé≤ –¶—ñ–∫–∞–≤–∏–π —Ñ–∞–∫—Ç',
        'main_gpt': 'üí¨ –°–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è –∑ ChatGPT',
        'main_talk': 'üß† –î—ñ–∞–ª–æ–≥ –∑ —ñ—Å—Ç–æ—Ä–∏—á–Ω–æ—é –æ—Å–æ–±–∏—Å—Ç—ñ—Å—Ç—é',
        'main_quiz': 'üéì –Ü–Ω—Ç–µ–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞ –≥—Ä–∞ "–ù–∞–π—Ä–æ–∑—É–º–Ω—ñ—à–∏–π"',
        'main_photo': 'üì∑ –†–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è —ó–∂—ñ —Ç–∞ –ø—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∫–∞–ª–æ—Ä—ñ–π',
        'main_recept': 'üç≥ –ö—É–ª—ñ–Ω–∞—Ä–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫',
    })

async def main_button(update, context):
    callback = update.callback_query
    query_data = callback.data
    user = callback.from_user
    user_id = user.id

    dialog.set_mode(user_id, 'main')

    await callback.answer()  # –∑–∞–≤–∂–¥–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –Ω–∞ callback_query
    log_user_action(update, f"–Ω–∞—Ç–∏—Å–Ω—É–≤ –∫–Ω–æ–ø–∫—É: {query_data}")

    if query_data == 'main_start':
        await start(update, context)
    elif query_data == 'main_random':
        await random_fact(update, context)
    elif query_data == 'main_gpt':
        await gpt(update, context)
    elif query_data == 'main_talk':
        await talk_command(update, context)
    elif query_data == 'main_quiz':
        await handle_quiz_command(update, context)
    elif query_data == 'main_photo':
        await photo_mode_start(update, context)
    elif query_data == 'main_recept':
        await recept(update,context)
    else:
        await callback.message.edit_text("‚ö†Ô∏è –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞.")

