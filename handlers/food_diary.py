# handlers/food_diary.py

from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes
from utils.util import send_text_buttons_edit, send_text
from services.dialog import dialog
from database.food_diary_db import add_diary_entry, get_diary_entries, clear_diary


async def food_diary_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    dialog.set_mode(user_id, "food_diary")
    await send_text_buttons_edit(update, context, "üìò –©–æ–¥–µ–Ω–Ω–∏–∫ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è ‚Äî –æ–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", {
        "add_food_entry": "‚ûï –î–æ–¥–∞—Ç–∏ —Å—Ç—Ä–∞–≤—É",
        "view_food_diary": "üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ",
        "clear_food_diary": "üóë –û—á–∏—Å—Ç–∏—Ç–∏",
        "main_start": "üè† –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"
    })

async def handle_diary_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = query.from_user.id
    data = query.data

    if data == "add_food_entry":
        dialog.set_mode(user_id, "adding_food_entry")
        await send_text_buttons_edit(update, context,
            "üìù –í–≤–µ–¥—ñ—Ç—å —Å—Ç—Ä–∞–≤—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: `2 eggs`):",
            {"food_diary": "üîô –ù–∞–∑–∞–¥ –¥–æ —â–æ–¥–µ–Ω–Ω–∏–∫–∞"}
        )

    elif data == "view_food_diary":
        entries = get_diary_entries(user_id)
        text = "üìã –°—å–æ–≥–æ–¥–Ω—ñ:\n\n" + "\n".join(f" {e}" for e in entries) if entries else "üì≠ –©–æ–¥–µ–Ω–Ω–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π."
        await send_text_buttons_edit(update, context, text, {
            "food_diary": "üîô –ù–∞–∑–∞–¥ –¥–æ —â–æ–¥–µ–Ω–Ω–∏–∫–∞"
        })

    elif data == "clear_food_diary":
        clear_diary(user_id)
        await send_text_buttons_edit(update, context,
            "üóë –©–æ–¥–µ–Ω–Ω–∏–∫ –æ—á–∏—â–µ–Ω–æ.",
            {"food_diary": "üîô –ù–∞–∑–∞–¥ –¥–æ —â–æ–¥–µ–Ω–Ω–∏–∫–∞"}
        )

    elif data == "food_diary":
        await food_diary_start(update, context)

    elif data == "main_start":
        from handlers.main_menu import start  # –∞–±–æ –≤–∞—à —Å—Ç–∞—Ä—Ç-—Ö–µ–Ω–¥–ª–µ—Ä
        dialog.set_mode(user_id, "main")
        await start(update, context)

async def handle_food_entry_input(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    mode = dialog.get_mode(user_id)
    if mode != "adding_food_entry":
        return  # –Ω–µ –≤ —Ä–µ–∂–∏–º—ñ –¥–æ–¥–∞–≤–∞–Ω–Ω—è ‚Äî —ñ–≥–Ω–æ—Ä—É—î–º–æ

    text = update.message.text.strip()
    if text:
        add_diary_entry(user_id, text)
        await send_text(update, context, "‚úÖ –î–æ–¥–∞–Ω–æ –¥–æ —â–æ–¥–µ–Ω–Ω–∏–∫–∞.")
    else:
        await send_text(update, context, "‚ö†Ô∏è –ü–æ—Ä–æ–∂–Ω—î ‚Äî —Å–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")

    # –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –º–µ–Ω—é —â–æ–¥–µ–Ω–Ω–∏–∫–∞
    await food_diary_start(update, context)
